#!/bin/bash
#ifs.sh

# Histogram - generate image histogram - Rowland Cheshire December 2018
# cheshire_r@fastmail.fm

# Generate histogram

# GPLv3 - distribute as desired - not for commercial use - attribution rights.

# Acknowledgements
# Ivo Jaeger (http://siliconfields.net)
# dcraw: (http://www.cybercom.net/~dcoffin/)
# ImageMagick: (http://www.imagemagick.org/script/index.php)

# get path to histogram
	MYPATH="`dirname \"$0\"`"           	# relative
	MYPATH="`( cd \"$MYPATH\" && pwd )`"  	# absolutized and normalized
	if [ -z "$MYPATH" ] ; then
# error; for some reason, the path is not accessible
# to the script (e.g. permissions re-evaled after suid)
  	exit 1  # fail
fi

# location of source files
	if [ -e $MYPATH/asterism ]; then
	source=$(readlink -f $MYPATH); else
	source=$(pwd)
	fi

# no at bridge	

	export NO_AT_BRIDGE=1

# title
	title='Histogram'

# location of yad window icon
	if [ -e $MYPATH/AsterismLOGOs.png ]; then
	wicon=$(readlink -f $MYPATH/AsterismLOGOs.png)
	fi

# create directory (if needed) helper function
	function createDirIfNeeded ()
	{
	if [ -d $1 ]
	then
		echo " " >/dev/null 2>&1
	else
		echo "		Creating $1 folder"
	mkdir $1
	fi
	}

# yad progress function
	function yadProgress ()
	{
	yad --progress --center \
  		--title="$title" \
		--progress-text="$text" \
		--window-icon=$wicon \
		--width=300 \
		--pulsate \
		--no-buttons \
  		--auto-close \
  		--auto-kill 2>/dev/null
	}

# file type function
	function fileType () 
	{
	FILES=$(basename -a *.*)
	ext="${FILES##*.}"
	}

# yad error function
	function yadError ()
	{
	(( $? != 0 )) && yad --error --text="Error in yad command"
	}

# killall function
	function killAll ()
	{
	killall histogram
	}

# select image files
	text=$(echo "Select image files")
	
	IFS=$'\n'
	files=($(yad --file-selection --center --window-icon=$wicon --height=600 --width=480 --title="$title - select image files" --text="Select images" --button=Quit:1 --button=Load:0 --multiple --separator=$'\n' 2>/dev/null))
	echo "${files[@]}"

# run quit histogram
	if [[ $? != 1 || $? != 252 ]]; then
	echo " " >/dev/null 2>&1; else
	killAll
	exit 1
	fi

	imagedir=`echo "$files" |xargs dirname`

	echo $imagedir
	
	tmpdir=$imagedir/.tmp

	createDirIfNeeded $tmpdir

	for i in `ls -v "${files[@]}"`; do convert $i -set filename:f '%[t]' -define histogram:unique-colors=false histogram:$tmpdir/"%[filename:f].gif"; done

	for i in $tmpdir/*.gif;do mv -- "$i" "${i%%.gif}";done

	animate -delay 50 -loop 0 -resize 200% $tmpdir/* 2>/dev/null

	rm -f -R $tmpdir
exit
